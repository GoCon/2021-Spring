<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A3-L on Go Conference 2021 Spring</title>
    <link>https://gocon.jp/2021spring/tags/a3-l/</link>
    <description>Recent content in A3-L on Go Conference 2021 Spring</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language><atom:link href="https://gocon.jp/2021spring/tags/a3-l/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go Channels Demystified</title>
      <link>https://gocon.jp/2021spring/sessions/session-a3-l/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gocon.jp/2021spring/sessions/session-a3-l/</guid>
      <description>Go makes concurrency a breeze. But with concurrency comes the trouble of managing info between multiple concurrent process. Thats where channels come in. But do we know all channels has to offer? How can we make better use of this language construct? This is what this talk is about.
 We are in the era of fast computing. Single threaded programs are often incapable of handling workloads for a modern program.</description>
    </item>
    
  </channel>
</rss>
