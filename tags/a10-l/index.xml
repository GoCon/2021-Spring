<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A10-L on Go Conference 2021 Spring</title>
    <link>https://gocon.jp/2021spring/tags/a10-l/</link>
    <description>Recent content in A10-L on Go Conference 2021 Spring</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language><atom:link href="https://gocon.jp/2021spring/tags/a10-l/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Thread-Safety in Go - An Overlooked Concern</title>
      <link>https://gocon.jp/2021spring/sessions/session-a10-l/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gocon.jp/2021spring/sessions/session-a10-l/</guid>
      <description>A not so glamorous part of studying concurrency in Go is understanding how to write thread-safe code.
Even though it&amp;rsquo;s an important concern, it is often overlooked in most resources on concurrency.
This talk will bridge the gap and cover the basics but also provide guidance on further studies.
 In the talk we&amp;rsquo;ll explore several important topics, which form the fundamentals of thread-safety:
 Why study it in the first place?</description>
    </item>
    
  </channel>
</rss>
